// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_mobile_app_template/test/common/usecase/rest_api_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_mobile_app_template/common/usecase/environment_usecase.dart'
    as _i5;
import 'package:flutter_mobile_app_template/common/usecase/firebase_usecase.dart'
    as _i4;
import 'package:flutter_mobile_app_template/const/operation_type.dart' as _i6;
import 'package:flutter_mobile_app_template/repository/rest_api/rest_api_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [RestApiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestApiRepository extends _i1.Mock implements _i2.RestApiRepository {
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i3.Future<Map<String, dynamic>> request(
          {String? url,
          _i2.HttpMethod? method,
          dynamic body,
          int? timeOutSeconds}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [], {
                #url: url,
                #method: method,
                #body: body,
                #timeOutSeconds: timeOutSeconds
              }),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i3.Future<Map<String, dynamic>>);
}

/// A class which mocks [FirebaseUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseUseCase extends _i1.Mock implements _i4.FirebaseUseCase {
  @override
  _i3.Future<void> init() => (super.noSuchMethod(Invocation.method(#init, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setUserId(String? id) =>
      (super.noSuchMethod(Invocation.method(#setUserId, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logCurrentScreen(String? screenName) =>
      (super.noSuchMethod(Invocation.method(#logCurrentScreen, [screenName]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logAppError(String? errorLog) =>
      (super.noSuchMethod(Invocation.method(#logAppError, [errorLog]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> recordError(Object? exception, {StackTrace? stackTrace}) =>
      (super.noSuchMethod(
          Invocation.method(
              #recordError, [exception], {#stackTrace: stackTrace}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<bool> fetchServiceMaintenanceFlag() =>
      (super.noSuchMethod(Invocation.method(#fetchServiceMaintenanceFlag, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}

/// A class which mocks [EnvironmentUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentUseCase extends _i1.Mock
    implements _i5.EnvironmentUseCase {
  @override
  _i6.OperationType getOperationType() =>
      (super.noSuchMethod(Invocation.method(#getOperationType, []),
          returnValue: _i6.OperationType.product) as _i6.OperationType);
}
