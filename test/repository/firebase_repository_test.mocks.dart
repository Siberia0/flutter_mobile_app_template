// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_mobile_app_template/test/repository/firebase_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:firebase_core/firebase_core.dart' as _i3;
import 'package:firebase_core_platform_interface/firebase_core_platform_interface.dart'
    as _i2;
import 'package:firebase_remote_config/firebase_remote_config.dart' as _i6;
import 'package:firebase_remote_config_platform_interface/firebase_remote_config_platform_interface.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFirebaseOptions_0 extends _i1.Fake implements _i2.FirebaseOptions {}

class _FakeFirebaseApp_1 extends _i1.Fake implements _i3.FirebaseApp {}

class _FakeDateTime_2 extends _i1.Fake implements DateTime {}

class _FakeRemoteConfigSettings_3 extends _i1.Fake
    implements _i4.RemoteConfigSettings {}

class _FakeRemoteConfigValue_4 extends _i1.Fake
    implements _i4.RemoteConfigValue {}

/// A class which mocks [FirebaseApp].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseApp extends _i1.Mock implements _i3.FirebaseApp {
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  _i2.FirebaseOptions get options =>
      (super.noSuchMethod(Invocation.getter(#options),
          returnValue: _FakeFirebaseOptions_0()) as _i2.FirebaseOptions);
  @override
  bool get isAutomaticDataCollectionEnabled =>
      (super.noSuchMethod(Invocation.getter(#isAutomaticDataCollectionEnabled),
          returnValue: false) as bool);
  @override
  _i5.Future<void> delete() =>
      (super.noSuchMethod(Invocation.method(#delete, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> setAutomaticDataCollectionEnabled(bool? enabled) =>
      (super.noSuchMethod(
          Invocation.method(#setAutomaticDataCollectionEnabled, [enabled]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> setAutomaticResourceManagementEnabled(bool? enabled) =>
      (super.noSuchMethod(
          Invocation.method(#setAutomaticResourceManagementEnabled, [enabled]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}

/// A class which mocks [FirebaseRemoteConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseRemoteConfig extends _i1.Mock
    implements _i6.FirebaseRemoteConfig {
  @override
  _i3.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
      returnValue: _FakeFirebaseApp_1()) as _i3.FirebaseApp);
  @override
  DateTime get lastFetchTime =>
      (super.noSuchMethod(Invocation.getter(#lastFetchTime),
          returnValue: _FakeDateTime_2()) as DateTime);
  @override
  _i4.RemoteConfigFetchStatus get lastFetchStatus =>
      (super.noSuchMethod(Invocation.getter(#lastFetchStatus),
              returnValue: _i4.RemoteConfigFetchStatus.noFetchYet)
          as _i4.RemoteConfigFetchStatus);
  @override
  _i4.RemoteConfigSettings get settings => (super.noSuchMethod(
      Invocation.getter(#settings),
      returnValue: _FakeRemoteConfigSettings_3()) as _i4.RemoteConfigSettings);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<bool> activate() =>
      (super.noSuchMethod(Invocation.method(#activate, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<void> ensureInitialized() =>
      (super.noSuchMethod(Invocation.method(#ensureInitialized, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> fetch() => (super.noSuchMethod(Invocation.method(#fetch, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<bool> fetchAndActivate() =>
      (super.noSuchMethod(Invocation.method(#fetchAndActivate, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  Map<String, _i4.RemoteConfigValue> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: <String, _i4.RemoteConfigValue>{})
          as Map<String, _i4.RemoteConfigValue>);
  @override
  bool getBool(String? key) => (super
          .noSuchMethod(Invocation.method(#getBool, [key]), returnValue: false)
      as bool);
  @override
  int getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key]), returnValue: 0)
          as int);
  @override
  double getDouble(String? key) => (super
          .noSuchMethod(Invocation.method(#getDouble, [key]), returnValue: 0.0)
      as double);
  @override
  String getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key]), returnValue: '')
          as String);
  @override
  _i4.RemoteConfigValue getValue(String? key) =>
      (super.noSuchMethod(Invocation.method(#getValue, [key]),
          returnValue: _FakeRemoteConfigValue_4()) as _i4.RemoteConfigValue);
  @override
  _i5.Future<void> setConfigSettings(
          _i4.RemoteConfigSettings? remoteConfigSettings) =>
      (super.noSuchMethod(
          Invocation.method(#setConfigSettings, [remoteConfigSettings]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> setDefaults(Map<String, dynamic>? defaultParameters) =>
      (super.noSuchMethod(Invocation.method(#setDefaults, [defaultParameters]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void addListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
